# Nginx Reverse Proxy Configuration for Traccar
# Location: /etc/nginx/sites-available/traccar
#
# This configuration:
# - Redirects HTTP (port 80) to HTTPS (port 443)
# - Proxies all requests to Traccar on localhost:8082
# - Enables WebSocket support for real-time updates
# - Adds security headers
# - Handles CORS for web clients

# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name traccar.yourdomain.com;  # REPLACE with your domain or IP
    
    # Allow Let's Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name traccar.yourdomain.com;  # REPLACE with your domain or IP
    
    # SSL Configuration (Let's Encrypt certificates)
    ssl_certificate /etc/letsencrypt/live/traccar.yourdomain.com/fullchain.pem;  # REPLACE
    ssl_certificate_key /etc/letsencrypt/live/traccar.yourdomain.com/privkey.pem;  # REPLACE
    
    # Modern SSL settings (Mozilla Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/traccar.yourdomain.com/chain.pem;  # REPLACE
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS headers for web app
    add_header Access-Control-Allow-Origin "https://app-gps-version.web.app" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "https://app-gps-version.web.app" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }
    
    # Max upload size (for file uploads if needed)
    client_max_body_size 50M;
    
    # Timeouts for long-running requests
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Main proxy location (all API requests)
    location / {
        # Proxy to Traccar backend
        proxy_pass http://127.0.0.1:8082;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for real-time updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable buffering for real-time streaming
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Keep-alive
        proxy_set_header Connection "";
    }
    
    # Health check endpoint (optional)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Access logs
    access_log /var/log/nginx/traccar-access.log;
    error_log /var/log/nginx/traccar-error.log;
}
